<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yd.badminton.mapper.AppraisalMapper">
  <resultMap id="BaseResultMap" type="cn.yd.badminton.po.Appraisal">
    <id column="appraisal_ID" jdbcType="INTEGER" property="appraisalId" />
    <result column="user_ID" jdbcType="INTEGER" property="userId" />
    <result column="area_ID" jdbcType="INTEGER" property="areaId" />
    <result column="app_status" jdbcType="INTEGER" property="appStatus" />
    <result column="app_time" jdbcType="DATE" property="appTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.yd.badminton.po.Appraisal">
    <result column="info" jdbcType="LONGVARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    appraisal_ID, user_ID, area_ID, app_status, app_time
  </sql>
  <sql id="Blob_Column_List">
    info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.yd.badminton.po.AppraisalExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from appraisal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.yd.badminton.po.AppraisalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appraisal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from appraisal
    where appraisal_ID = #{appraisalId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from appraisal
    where appraisal_ID = #{appraisalId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yd.badminton.po.AppraisalExample">
    delete from appraisal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yd.badminton.po.Appraisal">
    insert into appraisal (appraisal_ID, user_ID, area_ID, 
      app_status, app_time, info
      )
    values (#{appraisalId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, 
      #{appStatus,jdbcType=INTEGER}, #{appTime,jdbcType=DATE}, #{info,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yd.badminton.po.Appraisal">
    insert into appraisal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appraisalId != null">
        appraisal_ID,
      </if>
      <if test="userId != null">
        user_ID,
      </if>
      <if test="areaId != null">
        area_ID,
      </if>
      <if test="appStatus != null">
        app_status,
      </if>
      <if test="appTime != null">
        app_time,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appraisalId != null">
        #{appraisalId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="appStatus != null">
        #{appStatus,jdbcType=INTEGER},
      </if>
      <if test="appTime != null">
        #{appTime,jdbcType=DATE},
      </if>
      <if test="info != null">
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yd.badminton.po.AppraisalExample" resultType="java.lang.Long">
    select count(*) from appraisal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appraisal
    <set>
      <if test="record.appraisalId != null">
        appraisal_ID = #{record.appraisalId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.appStatus != null">
        app_status = #{record.appStatus,jdbcType=INTEGER},
      </if>
      <if test="record.appTime != null">
        app_time = #{record.appTime,jdbcType=DATE},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update appraisal
    set appraisal_ID = #{record.appraisalId,jdbcType=INTEGER},
      user_ID = #{record.userId,jdbcType=INTEGER},
      area_ID = #{record.areaId,jdbcType=INTEGER},
      app_status = #{record.appStatus,jdbcType=INTEGER},
      app_time = #{record.appTime,jdbcType=DATE},
      info = #{record.info,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appraisal
    set appraisal_ID = #{record.appraisalId,jdbcType=INTEGER},
      user_ID = #{record.userId,jdbcType=INTEGER},
      area_ID = #{record.areaId,jdbcType=INTEGER},
      app_status = #{record.appStatus,jdbcType=INTEGER},
      app_time = #{record.appTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yd.badminton.po.Appraisal">
    update appraisal
    <set>
      <if test="userId != null">
        user_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_ID = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="appStatus != null">
        app_status = #{appStatus,jdbcType=INTEGER},
      </if>
      <if test="appTime != null">
        app_time = #{appTime,jdbcType=DATE},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where appraisal_ID = #{appraisalId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.yd.badminton.po.Appraisal">
    update appraisal
    set user_ID = #{userId,jdbcType=INTEGER},
      area_ID = #{areaId,jdbcType=INTEGER},
      app_status = #{appStatus,jdbcType=INTEGER},
      app_time = #{appTime,jdbcType=DATE},
      info = #{info,jdbcType=LONGVARCHAR}
    where appraisal_ID = #{appraisalId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yd.badminton.po.Appraisal">
    update appraisal
    set user_ID = #{userId,jdbcType=INTEGER},
      area_ID = #{areaId,jdbcType=INTEGER},
      app_status = #{appStatus,jdbcType=INTEGER},
      app_time = #{appTime,jdbcType=DATE}
    where appraisal_ID = #{appraisalId,jdbcType=INTEGER}
  </update>
</mapper>