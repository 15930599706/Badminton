<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yd.badminton.mapper.AreaMapper">
  <resultMap id="BaseResultMap" type="cn.yd.badminton.po.Area">
    <id column="area_ID" jdbcType="INTEGER" property="areaId" />
    <result column="areaname" jdbcType="VARCHAR" property="areaname" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="starttime" jdbcType="INTEGER" property="starttime" />
    <result column="stoptime" jdbcType="INTEGER" property="stoptime" />
    <result column="profit" jdbcType="DECIMAL" property="profit" />
    <result column="good_num" jdbcType="INTEGER" property="goodNum" />
    <result column="bad_num" jdbcType="INTEGER" property="badNum" />
    <result column="good_rate" jdbcType="INTEGER" property="goodRate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.yd.badminton.po.Area">
    <result column="des" jdbcType="LONGVARCHAR" property="des" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    area_ID, areaname, price, address, starttime, stoptime, profit, good_num, bad_num, 
    good_rate
  </sql>
  <sql id="Blob_Column_List">
    des
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.yd.badminton.po.AreaExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.yd.badminton.po.AreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from area
    where area_ID = #{areaId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from area
    where area_ID = #{areaId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yd.badminton.po.AreaExample">
    delete from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yd.badminton.po.Area">
    insert into area (area_ID, areaname, price, 
      address, starttime, stoptime, 
      profit, good_num, bad_num, 
      good_rate, des)
    values (#{areaId,jdbcType=INTEGER}, #{areaname,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{address,jdbcType=VARCHAR}, #{starttime,jdbcType=INTEGER}, #{stoptime,jdbcType=INTEGER}, 
      #{profit,jdbcType=DECIMAL}, #{goodNum,jdbcType=INTEGER}, #{badNum,jdbcType=INTEGER}, 
      #{goodRate,jdbcType=INTEGER}, #{des,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yd.badminton.po.Area">
    insert into area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        area_ID,
      </if>
      <if test="areaname != null">
        areaname,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="stoptime != null">
        stoptime,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="goodNum != null">
        good_num,
      </if>
      <if test="badNum != null">
        bad_num,
      </if>
      <if test="goodRate != null">
        good_rate,
      </if>
      <if test="des != null">
        des,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="areaname != null">
        #{areaname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=INTEGER},
      </if>
      <if test="stoptime != null">
        #{stoptime,jdbcType=INTEGER},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="goodNum != null">
        #{goodNum,jdbcType=INTEGER},
      </if>
      <if test="badNum != null">
        #{badNum,jdbcType=INTEGER},
      </if>
      <if test="goodRate != null">
        #{goodRate,jdbcType=INTEGER},
      </if>
      <if test="des != null">
        #{des,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yd.badminton.po.AreaExample" resultType="java.lang.Long">
    select count(*) from area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update area
    <set>
      <if test="record.areaId != null">
        area_ID = #{record.areaId,jdbcType=INTEGER},
      </if>
      <if test="record.areaname != null">
        areaname = #{record.areaname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=INTEGER},
      </if>
      <if test="record.stoptime != null">
        stoptime = #{record.stoptime,jdbcType=INTEGER},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DECIMAL},
      </if>
      <if test="record.goodNum != null">
        good_num = #{record.goodNum,jdbcType=INTEGER},
      </if>
      <if test="record.badNum != null">
        bad_num = #{record.badNum,jdbcType=INTEGER},
      </if>
      <if test="record.goodRate != null">
        good_rate = #{record.goodRate,jdbcType=INTEGER},
      </if>
      <if test="record.des != null">
        des = #{record.des,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update area
    set area_ID = #{record.areaId,jdbcType=INTEGER},
      areaname = #{record.areaname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=INTEGER},
      stoptime = #{record.stoptime,jdbcType=INTEGER},
      profit = #{record.profit,jdbcType=DECIMAL},
      good_num = #{record.goodNum,jdbcType=INTEGER},
      bad_num = #{record.badNum,jdbcType=INTEGER},
      good_rate = #{record.goodRate,jdbcType=INTEGER},
      des = #{record.des,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update area
    set area_ID = #{record.areaId,jdbcType=INTEGER},
      areaname = #{record.areaname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=INTEGER},
      stoptime = #{record.stoptime,jdbcType=INTEGER},
      profit = #{record.profit,jdbcType=DECIMAL},
      good_num = #{record.goodNum,jdbcType=INTEGER},
      bad_num = #{record.badNum,jdbcType=INTEGER},
      good_rate = #{record.goodRate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yd.badminton.po.Area">
    update area
    <set>
      <if test="areaname != null">
        areaname = #{areaname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=INTEGER},
      </if>
      <if test="stoptime != null">
        stoptime = #{stoptime,jdbcType=INTEGER},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="goodNum != null">
        good_num = #{goodNum,jdbcType=INTEGER},
      </if>
      <if test="badNum != null">
        bad_num = #{badNum,jdbcType=INTEGER},
      </if>
      <if test="goodRate != null">
        good_rate = #{goodRate,jdbcType=INTEGER},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where area_ID = #{areaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.yd.badminton.po.Area">
    update area
    set areaname = #{areaname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=INTEGER},
      stoptime = #{stoptime,jdbcType=INTEGER},
      profit = #{profit,jdbcType=DECIMAL},
      good_num = #{goodNum,jdbcType=INTEGER},
      bad_num = #{badNum,jdbcType=INTEGER},
      good_rate = #{goodRate,jdbcType=INTEGER},
      des = #{des,jdbcType=LONGVARCHAR}
    where area_ID = #{areaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yd.badminton.po.Area">
    update area
    set areaname = #{areaname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=INTEGER},
      stoptime = #{stoptime,jdbcType=INTEGER},
      profit = #{profit,jdbcType=DECIMAL},
      good_num = #{goodNum,jdbcType=INTEGER},
      bad_num = #{badNum,jdbcType=INTEGER},
      good_rate = #{goodRate,jdbcType=INTEGER}
    where area_ID = #{areaId,jdbcType=INTEGER}
  </update>
</mapper>